{"ast":null,"code":"var _jsxFileName = \"/Users/kushanranasinghe/Desktop/Project/frontend/src/components/UserTasks.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Calendar from 'react-calendar';\nimport moment from 'moment';\nimport 'react-calendar/dist/Calendar.css';\nimport './Calendar.css'; // Import your custom CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserTasks = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const fetchTasks = () => {\n    const uname = localStorage.getItem(\"username\");\n    console.log(uname);\n    axios.get(`http://localhost:8080/task/${uname}`).then(response => {\n      console.log(\"res\", response.data);\n      setTasks(response.data);\n    }).catch(error => {\n      console.error('Error fetching tasks:', error);\n    });\n  };\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n  const tasksForSelectedDate = tasks.filter(task => moment(task.date).isSame(selectedDate, 'day'));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-container\",\n        children: /*#__PURE__*/_jsxDEV(Calendar, {\n          onChange: handleDateChange,\n          value: selectedDate,\n          tileClassName: ({\n            date\n          }) => moment(date).isSame(selectedDate, 'day') ? 'selected' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasks-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold my-4 selected-date\",\n          children: [\"Tasks for \", moment(selectedDate).format('MMMM D, YYYY')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"tasks-list\",\n          children: tasksForSelectedDate.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"my-2\",\n            children: task.task\n          }, task._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(UserTasks, \"3tC4Sjgp4gXJ3RIrFLS5B3Ko15o=\");\n_c = UserTasks;\nexport default UserTasks;\nvar _c;\n$RefreshReg$(_c, \"UserTasks\");","map":{"version":3,"names":["React","useState","useEffect","axios","Calendar","moment","jsxDEV","_jsxDEV","UserTasks","_s","tasks","setTasks","selectedDate","setSelectedDate","Date","fetchTasks","uname","localStorage","getItem","console","log","get","then","response","data","catch","error","handleDateChange","date","tasksForSelectedDate","filter","task","isSame","className","children","onChange","value","tileClassName","fileName","_jsxFileName","lineNumber","columnNumber","format","map","_id","_c","$RefreshReg$"],"sources":["/Users/kushanranasinghe/Desktop/Project/frontend/src/components/UserTasks.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Calendar from 'react-calendar';\r\nimport moment from 'moment';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport './Calendar.css'; // Import your custom CSS file\r\n\r\nconst UserTasks = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const fetchTasks = () => {\r\n    const uname = localStorage.getItem(\"username\")\r\n    console.log(uname); \r\n    axios.get(`http://localhost:8080/task/${uname}`)\r\n      .then(response => {\r\n        console.log(\"res\",response.data);\r\n        setTasks(response.data);    \r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching tasks:', error);\r\n      });\r\n  };\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const tasksForSelectedDate = tasks.filter(task => moment(task.date).isSame(selectedDate, 'day'));\r\n\r\n  return (\r\n    <div className=\"container mx-auto\">\r\n      <div className=\"container\">\r\n        <div className=\"calendar-container\">\r\n          <Calendar\r\n            onChange={handleDateChange}\r\n            value={selectedDate}\r\n            tileClassName={({ date }) => moment(date).isSame(selectedDate, 'day') ? 'selected' : ''}\r\n          />\r\n        </div>\r\n        <div className=\"tasks-container\">\r\n          <h2 className=\"text-xl font-bold my-4 selected-date\">Tasks for {moment(selectedDate).format('MMMM D, YYYY')}</h2>\r\n          <ul className=\"tasks-list\">\r\n            {tasksForSelectedDate.map(task => (\r\n              <li key={task._id} className=\"my-2\">\r\n                {task.task}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserTasks;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}